{"version":3,"sources":["Board.js","Utilities.js","Game.js","index.js"],"names":["Square","props","className","onClick","value","num","Board","i","key","this","squares","col","Array","fill","map","_","renderSquare","renderRow","React","Component","calculateWinner","lines","length","a","b","c","Game","storedGame","JSON","parse","localStorage","getItem","state","history","xTurn","stepNum","step","setState","slice","concat","setItem","stringify","status","current","winner","fullBoard","moves","move","desc","player","thisMove","prevMove","difference","findIndex","square","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1383d84.chunk.js","sourcesContent":["import React from 'react';\n\nconst NUM_ROWS = 3;\nconst NUM_COLS = 3;\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        key={i}\n        value={this.props.squares[i]}\n        num={i + 1}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  renderRow(i) {\n    let col = i * NUM_COLS;\n\n    return (\n      <div key={`row${i}`} className=\"board-row\">\n        { Array(NUM_COLS).fill(null).map((_, i) => this.renderSquare(i + col)) }\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        { Array(NUM_ROWS).fill(null).map((_, i) => this.renderRow(i)) }\n      </div>\n    );\n  }\n}\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      { props.value }\n      <span className=\"squareNumber\">{props.num}</span>\n    </button>\n  );\n}\n\nexport default Board","function calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nexport { calculateWinner }","import React from 'react';\nimport Board from './Board'\nimport { calculateWinner } from './Utilities'\n\nconst LOCAL_STORAGE_KEY = 'tictactoe.game.state';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    const storedGame = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n\n    this.state = storedGame || {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xTurn: true,\n      stepNum: 0\n    }\n  }\n\n\n  jumpTo(step) {\n    this.setState({\n      stepNum: step,\n      xTurn: (step % 2) === 0\n    });\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNum + 1);\n    const current = history[history.length -1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) return;\n\n    squares[i] = this.state.xTurn ? 'X' : 'O';\n\n    this.setState({\n      history: history.concat([\n        { squares }\n      ]),\n      xTurn: !this.state.xTurn,\n      stepNum: history.length\n    }, () => {\n      localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(this.state));\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const stepNum = this.state.stepNum;\n    const current = history[stepNum];\n    const winner = calculateWinner(current.squares);\n    let fullBoard = false;\n\n    const moves = history.map((step, move) => {\n      let desc = `Restart Game`;\n\n      if (move > 0) {\n        let player = (move % 2) === 0 ? 'O' : 'X';\n        let thisMove = history[move].squares;\n        let prevMove = history[move - 1].squares;\n        let difference = thisMove.findIndex((square, i) => square !== prevMove[i]);\n        desc = `${player} plays in square ${difference + 1}`;\n\n        let moveWinner = calculateWinner(thisMove);\n        if (moveWinner) desc += ' and wins!!'\n      }\n\n      if (move >= 9) fullBoard = true;\n\n      return (\n        <li key={move}>\n          <button\n            onClick={() => this.jumpTo(move)}\n            className={move === stepNum ? 'active' : ''}\n          >\n            {desc}\n          </button>\n        </li>\n      )\n    });\n\n    let status;\n\n    if (winner) status = `${winner} is the Winner!!`;\n    else if (fullBoard) status = 'DRAW!';\n    else status = `Next player: ${this.state.xTurn ? 'X' : 'O'}`;\n\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{ status }</div>\n          <ol>{ moves }</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default Game","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport Game from './Game'\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}